# When a new push happens to a release-N branch (after its initial creation),
# open a pull request merging the latest commit back to the `develop` branch.

---

on:
  push:
    branches: ['release-[0-9]+']

jobs:
  build:
    runs-on: ubuntu-latest
    # this job should only run for things added after the branch is initially created
    # so skip all steps if the branch created=true
    if: "contains(github.event.created, 'false')"

    steps:
      - name: Set short_ref env vars
        run: |
          SHORT_REF="${{ github.event.ref }}"
          SHORT_SHA=$(echo "${{ github.event.after }}" | cut -c 1-12)
          echo "short_ref=${SHORT_REF/refs\/heads\//}" >> $GITHUB_ENV
          echo "short_sha=${SHORT_SHA}" >> $GITHUB_ENV
          echo "head_commit_message<<EOF" >> $GITHUB_ENV
          echo "${HEAD_COMMIT_MESSAGE//[\"\`]/â€œ}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        env:
          HEAD_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: work around permission issue
        run: git config --global --add safe.directory /__w/alexandre-bolduc-braze/gha-test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a new branch for the pull request
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'merge-${{ env.short_ref }}-${{ github.event.after }}'

      - name: Create Pull Request
        id: create-pr
        uses: repo-sync/pull-request@v2
        run: git config --global --add safe.directory /__w/alexandre-bolduc-braze/gha-test
        with:
          destination_branch: develop
          source_branch: 'merge-${{ env.short_ref }}-${{ github.event.after }}'
          pr_title: 'Merge Hotfix ${{ env.short_sha }} for ${{ env.short_ref }} back into develop'
          # if you modify the first line with "you are responsible", please make sure to also modify
          # the AUTHOR_REGEX regex in `git_operations/github_service.py`
          pr_body: |
            @${{ github.event.head_commit.author.username }}, you are responsible for your recent hotfix getting merged back to develop:

            Will merge ${{ env.short_sha }}: ${{ env.head_commit_message }}

            ### Mergeback Instructions
            * Resolve merge conflicts, if any exist
              * You are responsible for determining the correct merged state
            * Approve this PR
            * After the tests pass and there is an approval, this PR will be auto-merged
            * If the tests don't pass (or some other circumstances) and auto-merge does not occur, you must resolve the problems and manually Merge
              * This PR should be merged regardless of the circumstances. Even if there's no diff, if other hotfixes are included, etc.

            See https://confluence.braze.com/display/ENG/Hotfix+Release+Process for further details
          pr_reviewer: '${{ github.event.head_commit.author.username }},jasonpenny'
          pr_label: 'hotfix-merge-to-develop'
          github_token: ${{ secrets.AUTOMERGE_TOKEN }}

      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler: none

      - name: Mark Pull Request as Auto-Merge
        run: ruby .github/workflows/scripts/enable_auto_merge.rb "${{ steps.create-pr.outputs.pr_number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.AUTOMERGE_TOKEN }}
